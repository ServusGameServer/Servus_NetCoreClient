// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: ServusProtobufMain.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace ServusProtobuf {

  /// <summary>Holder for reflection information generated from ServusProtobufMain.proto</summary>
  public static partial class ServusProtobufMainReflection {

    #region Descriptor
    /// <summary>File descriptor for ServusProtobufMain.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ServusProtobufMainReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChhTZXJ2dXNQcm90b2J1Zk1haW4ucHJvdG8ivwUKDVNlcnZ1c01lc3NhZ2US",
            "GgoFbW9kdWwYASABKA4yCy5Nb2R1bGVuYW1lEiQKCWJhc2ljZnVuYxhkIAEo",
            "DjIPLkJhc2ljRnVuY3Rpb25zSAASIgoIYXV0aGZ1bmMYZSABKA4yDi5BdXRo",
            "RnVuY3Rpb25zSAASJAoJcXVldWVmdW5jGGYgASgOMg8uUXVldWVGdW5jdGlv",
            "bnNIABInCgZjZmZ1bmMYZyABKA4yFS5Db25uZWN0Rm91ckZ1bmN0aW9uc0gA",
            "EioKDHRlc3RHYW1lZnVuYxhoIAEoDjISLlRlc3RHYW1lRnVuY3Rpb25zSAAS",
            "EgoKY2FsbEJhY2tJRBgDIAEoEhIOCgZnYW1lSUQYBCABKAkSDQoFZXJyb3IY",
            "BSABKAgSFAoMZXJyb3JNZXNzYWdlGAYgASgJEh0KCWVycm9yVHlwZRgHIAEo",
            "DjIKLkVycm9yVHlwZRIWCgt2YWx1ZV9CeXRlcxjJASABKAxIARIXCgx2YWx1",
            "ZV9TdHJpbmcYygEgASgJSAESFAoJdmFsdWVfSW50GMsBIAEoA0gBEhUKCnZh",
            "bHVlX0Jvb2wYzAEgASgISAESLAoOdmFsdWVfU2VsZkF1dGgYzQEgASgLMhEu",
            "U2VydnVzTG9naW5fU2VsZkgBEiwKDnZhbHVlX09ubHlBdXRoGM4BIAEoCzIR",
            "LlNlcnZ1c0xvZ2luX09ubHlIARIoCgx2YWx1ZV9GQkF1dGgYzwEgASgLMg8u",
            "U2VydnVzTG9naW5fRkJIARI1ChB2YWx1ZV9GQkF1dGhSZXNwGNABIAEoCzIY",
            "LlNlcnZ1c0xvZ2luX0ZCX1Jlc3BvbnNlSAESMwoSdmFsdWVfVURhdGFQaWN0",
            "dXJlGNEBIAEoCzIULlVzZXJkYXRhX0dldFBpY3R1cmVIAUIMCgpmdW5jdGlv",
            "bklEQgcKBXZhbHVlIlkKE1VzZXJkYXRhX0dldFBpY3R1cmUSCgoCaWQYASAB",
            "KAkSIQoGcmVhc29uGAIgASgOMhEuVVNFUkRBVEFfUkVBU09OUxITCgt2YWx1",
            "ZV9CeXRlcxgDIAEoDCJFChBTZXJ2dXNMb2dpbl9TZWxmEhAKCG5pY2tuYW1l",
            "GAEgASgJEg0KBWVtYWlsGAIgASgJEhAKCHBhc3N3b3JkGAMgASgJIi4KDlNl",
            "cnZ1c0xvZ2luX0ZCEg0KBWZiX2lkGAEgASgJEg0KBXRva2VuGAIgASgJIk4K",
            "F1NlcnZ1c0xvZ2luX0ZCX1Jlc3BvbnNlEhYKDmxvZ2luU3VjZXNzZnVsGAEg",
            "ASgIEhsKBnJlYXNvbhgCIAEoDjILLkZCX1JFQVNPTlMiKwoQU2VydnVzTG9n",
            "aW5fT25seRIKCgJpZBgBIAEoAxILCgNrZXkYAiABKAMqaAoKRkJfUkVBU09O",
            "UxIVChFGQl9SRUFTT05TX1VOS09XThAAEiYKIkZCX1JFQVNPTlNfSURfTk9U",
            "X01BVENIRURfVE9fVE9LRU4QARIbChdGQl9SRUFTT05TX0lEX05PVF9GT1VO",
            "RBACKkwKEFVTRVJEQVRBX1JFQVNPTlMSGwoXVVNFUkRBVEFfUkVBU09OU19V",
            "TktPV04QABIbChdVU0VSREFUQV9SRUFTT05TX05PX1BJQxABKuoBCglFcnJv",
            "clR5cGUSEAoMRVJST1JfVU5LT1dOEAASEQoNRVJST1JfR0VORVJJQxABEgwK",
            "CEVSUk9SX0RCEAISFQoRRVJST1JfV1JPTkdNRVRIT0QQAxIRCg1FUlJPUl9O",
            "T19BVVRIEAQSFwoTRVJST1JfTk9fR0FNRV9GT1VORBAFEh0KGUVSUk9SX05P",
            "X0dBTUVfUVVFVUVfRk9VTkQQBhIXChNFUlJPUl9OT19GQl9QSUNUVVJFEAcS",
            "EwoPRVJST1JfTk9UX0ZPVU5EEAgSGgoWRVJST1JfTk9fTUFQUElOR19GT1VO",
            "RBAJKlUKDUF1dGhGdW5jdGlvbnMSDwoLQVVUSF9VTktPV04QABIRCg1BVVRI",
            "X1JFR0lTVEVSEAESDgoKQVVUSF9MT0dJThACEhAKDEFVVEhfUElDVFVSRRAD",
            "KkMKDkJhc2ljRnVuY3Rpb25zEhAKDEJBU0lDX1VOS09XThAAEg8KC0JBU0lD",
            "X0JFR0lOEAESDgoKQkFTSUNfRUNITxACKlUKDlF1ZXVlRnVuY3Rpb25zEhAK",
            "DFFVRVVFX1VOS09XThAAEg4KClFVRVVFX0pPSU4QARIPCgtRVUVVRV9MRUFW",
            "RRACEhAKDFFVRVVFX0dBTUVJRBADKoIBChRDb25uZWN0Rm91ckZ1bmN0aW9u",
            "cxINCglDRl9VTktPV04QABIMCghTVEFSVF9DRhABEgsKB1RVUk5fQ0YQAhIM",
            "CghBQk9SVF9DRhADEgoKBlNFVF9DRhAEEgoKBldJTl9DRhAFEgwKCExPT1NF",
            "X0NGEAYSDAoIUkVTRVRfQ0YQByo9ChFUZXN0R2FtZUZ1bmN0aW9ucxINCglU",
            "R19VTktPV04QABIMCghUR19CRUdJThABEgsKB1RHX0VDSE8QAiqyAQoKTW9k",
            "dWxlbmFtZRILCgdVTktOT1dOEAASCgoGRElSRUNUEAESEgoOU0VSVkVSU0VU",
            "VElOR1MQAhIJCgVRVUVVRRADEg4KCkRJUkVDVEdBTUUQBBIPCgtHRU5FUklD",
            "R0FNRRAFEgsKB0FVVEhfRkIQBhINCglBVVRIX1NFTEYQBxINCglBVVRIX09O",
            "TFkQCBIRCg1BVVRIX1VTRVJEQVRBEAkSDQoJVEVTVF9FQ0hPEApCEaoCDlNl",
            "cnZ1c1Byb3RvYnVmYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::ServusProtobuf.FB_REASONS), typeof(global::ServusProtobuf.USERDATA_REASONS), typeof(global::ServusProtobuf.ErrorType), typeof(global::ServusProtobuf.AuthFunctions), typeof(global::ServusProtobuf.BasicFunctions), typeof(global::ServusProtobuf.QueueFunctions), typeof(global::ServusProtobuf.ConnectFourFunctions), typeof(global::ServusProtobuf.TestGameFunctions), typeof(global::ServusProtobuf.Modulename), }, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::ServusProtobuf.ServusMessage), global::ServusProtobuf.ServusMessage.Parser, new[]{ "Modul", "Basicfunc", "Authfunc", "Queuefunc", "Cffunc", "TestGamefunc", "CallBackID", "GameID", "Error", "ErrorMessage", "ErrorType", "ValueBytes", "ValueString", "ValueInt", "ValueBool", "ValueSelfAuth", "ValueOnlyAuth", "ValueFBAuth", "ValueFBAuthResp", "ValueUDataPicture" }, new[]{ "FunctionID", "Value" }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServusProtobuf.Userdata_GetPicture), global::ServusProtobuf.Userdata_GetPicture.Parser, new[]{ "Id", "Reason", "ValueBytes" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServusProtobuf.ServusLogin_Self), global::ServusProtobuf.ServusLogin_Self.Parser, new[]{ "Nickname", "Email", "Password" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServusProtobuf.ServusLogin_FB), global::ServusProtobuf.ServusLogin_FB.Parser, new[]{ "FbId", "Token" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServusProtobuf.ServusLogin_FB_Response), global::ServusProtobuf.ServusLogin_FB_Response.Parser, new[]{ "LoginSucessful", "Reason" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServusProtobuf.ServusLogin_Only), global::ServusProtobuf.ServusLogin_Only.Parser, new[]{ "Id", "Key" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum FB_REASONS {
    [pbr::OriginalName("FB_REASONS_UNKOWN")] Unkown = 0,
    [pbr::OriginalName("FB_REASONS_ID_NOT_MATCHED_TO_TOKEN")] IdNotMatchedToToken = 1,
    [pbr::OriginalName("FB_REASONS_ID_NOT_FOUND")] IdNotFound = 2,
  }

  public enum USERDATA_REASONS {
    [pbr::OriginalName("USERDATA_REASONS_UNKOWN")] Unkown = 0,
    [pbr::OriginalName("USERDATA_REASONS_NO_PIC")] NoPic = 1,
  }

  public enum ErrorType {
    [pbr::OriginalName("ERROR_UNKOWN")] ErrorUnkown = 0,
    [pbr::OriginalName("ERROR_GENERIC")] ErrorGeneric = 1,
    [pbr::OriginalName("ERROR_DB")] ErrorDb = 2,
    [pbr::OriginalName("ERROR_WRONGMETHOD")] ErrorWrongmethod = 3,
    [pbr::OriginalName("ERROR_NO_AUTH")] ErrorNoAuth = 4,
    [pbr::OriginalName("ERROR_NO_GAME_FOUND")] ErrorNoGameFound = 5,
    [pbr::OriginalName("ERROR_NO_GAME_QUEUE_FOUND")] ErrorNoGameQueueFound = 6,
    [pbr::OriginalName("ERROR_NO_FB_PICTURE")] ErrorNoFbPicture = 7,
    [pbr::OriginalName("ERROR_NOT_FOUND")] ErrorNotFound = 8,
    [pbr::OriginalName("ERROR_NO_MAPPING_FOUND")] ErrorNoMappingFound = 9,
  }

  public enum AuthFunctions {
    [pbr::OriginalName("AUTH_UNKOWN")] AuthUnkown = 0,
    [pbr::OriginalName("AUTH_REGISTER")] AuthRegister = 1,
    [pbr::OriginalName("AUTH_LOGIN")] AuthLogin = 2,
    [pbr::OriginalName("AUTH_PICTURE")] AuthPicture = 3,
  }

  public enum BasicFunctions {
    [pbr::OriginalName("BASIC_UNKOWN")] BasicUnkown = 0,
    [pbr::OriginalName("BASIC_BEGIN")] BasicBegin = 1,
    [pbr::OriginalName("BASIC_ECHO")] BasicEcho = 2,
  }

  public enum QueueFunctions {
    [pbr::OriginalName("QUEUE_UNKOWN")] QueueUnkown = 0,
    [pbr::OriginalName("QUEUE_JOIN")] QueueJoin = 1,
    [pbr::OriginalName("QUEUE_LEAVE")] QueueLeave = 2,
    [pbr::OriginalName("QUEUE_GAMEID")] QueueGameid = 3,
  }

  public enum ConnectFourFunctions {
    [pbr::OriginalName("CF_UNKOWN")] CfUnkown = 0,
    [pbr::OriginalName("START_CF")] StartCf = 1,
    [pbr::OriginalName("TURN_CF")] TurnCf = 2,
    [pbr::OriginalName("ABORT_CF")] AbortCf = 3,
    [pbr::OriginalName("SET_CF")] SetCf = 4,
    [pbr::OriginalName("WIN_CF")] WinCf = 5,
    [pbr::OriginalName("LOOSE_CF")] LooseCf = 6,
    [pbr::OriginalName("RESET_CF")] ResetCf = 7,
  }

  public enum TestGameFunctions {
    [pbr::OriginalName("TG_UNKOWN")] TgUnkown = 0,
    [pbr::OriginalName("TG_BEGIN")] TgBegin = 1,
    [pbr::OriginalName("TG_ECHO")] TgEcho = 2,
  }

  public enum Modulename {
    [pbr::OriginalName("UNKNOWN")] Unknown = 0,
    [pbr::OriginalName("DIRECT")] Direct = 1,
    [pbr::OriginalName("SERVERSETTINGS")] Serversettings = 2,
    [pbr::OriginalName("QUEUE")] Queue = 3,
    [pbr::OriginalName("DIRECTGAME")] Directgame = 4,
    [pbr::OriginalName("GENERICGAME")] Genericgame = 5,
    [pbr::OriginalName("AUTH_FB")] AuthFb = 6,
    [pbr::OriginalName("AUTH_SELF")] AuthSelf = 7,
    [pbr::OriginalName("AUTH_ONLY")] AuthOnly = 8,
    [pbr::OriginalName("AUTH_USERDATA")] AuthUserdata = 9,
    [pbr::OriginalName("TEST_ECHO")] TestEcho = 10,
  }

  #endregion

  #region Messages
  public sealed partial class ServusMessage : pb::IMessage<ServusMessage> {
    private static readonly pb::MessageParser<ServusMessage> _parser = new pb::MessageParser<ServusMessage>(() => new ServusMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ServusMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServusProtobuf.ServusProtobufMainReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServusMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServusMessage(ServusMessage other) : this() {
      modul_ = other.modul_;
      callBackID_ = other.callBackID_;
      gameID_ = other.gameID_;
      error_ = other.error_;
      errorMessage_ = other.errorMessage_;
      errorType_ = other.errorType_;
      switch (other.FunctionIDCase) {
        case FunctionIDOneofCase.Basicfunc:
          Basicfunc = other.Basicfunc;
          break;
        case FunctionIDOneofCase.Authfunc:
          Authfunc = other.Authfunc;
          break;
        case FunctionIDOneofCase.Queuefunc:
          Queuefunc = other.Queuefunc;
          break;
        case FunctionIDOneofCase.Cffunc:
          Cffunc = other.Cffunc;
          break;
        case FunctionIDOneofCase.TestGamefunc:
          TestGamefunc = other.TestGamefunc;
          break;
      }

      switch (other.ValueCase) {
        case ValueOneofCase.ValueBytes:
          ValueBytes = other.ValueBytes;
          break;
        case ValueOneofCase.ValueString:
          ValueString = other.ValueString;
          break;
        case ValueOneofCase.ValueInt:
          ValueInt = other.ValueInt;
          break;
        case ValueOneofCase.ValueBool:
          ValueBool = other.ValueBool;
          break;
        case ValueOneofCase.ValueSelfAuth:
          ValueSelfAuth = other.ValueSelfAuth.Clone();
          break;
        case ValueOneofCase.ValueOnlyAuth:
          ValueOnlyAuth = other.ValueOnlyAuth.Clone();
          break;
        case ValueOneofCase.ValueFBAuth:
          ValueFBAuth = other.ValueFBAuth.Clone();
          break;
        case ValueOneofCase.ValueFBAuthResp:
          ValueFBAuthResp = other.ValueFBAuthResp.Clone();
          break;
        case ValueOneofCase.ValueUDataPicture:
          ValueUDataPicture = other.ValueUDataPicture.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServusMessage Clone() {
      return new ServusMessage(this);
    }

    /// <summary>Field number for the "modul" field.</summary>
    public const int ModulFieldNumber = 1;
    private global::ServusProtobuf.Modulename modul_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ServusProtobuf.Modulename Modul {
      get { return modul_; }
      set {
        modul_ = value;
      }
    }

    /// <summary>Field number for the "basicfunc" field.</summary>
    public const int BasicfuncFieldNumber = 100;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ServusProtobuf.BasicFunctions Basicfunc {
      get { return functionIDCase_ == FunctionIDOneofCase.Basicfunc ? (global::ServusProtobuf.BasicFunctions) functionID_ : 0; }
      set {
        functionID_ = value;
        functionIDCase_ = FunctionIDOneofCase.Basicfunc;
      }
    }

    /// <summary>Field number for the "authfunc" field.</summary>
    public const int AuthfuncFieldNumber = 101;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ServusProtobuf.AuthFunctions Authfunc {
      get { return functionIDCase_ == FunctionIDOneofCase.Authfunc ? (global::ServusProtobuf.AuthFunctions) functionID_ : 0; }
      set {
        functionID_ = value;
        functionIDCase_ = FunctionIDOneofCase.Authfunc;
      }
    }

    /// <summary>Field number for the "queuefunc" field.</summary>
    public const int QueuefuncFieldNumber = 102;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ServusProtobuf.QueueFunctions Queuefunc {
      get { return functionIDCase_ == FunctionIDOneofCase.Queuefunc ? (global::ServusProtobuf.QueueFunctions) functionID_ : 0; }
      set {
        functionID_ = value;
        functionIDCase_ = FunctionIDOneofCase.Queuefunc;
      }
    }

    /// <summary>Field number for the "cffunc" field.</summary>
    public const int CffuncFieldNumber = 103;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ServusProtobuf.ConnectFourFunctions Cffunc {
      get { return functionIDCase_ == FunctionIDOneofCase.Cffunc ? (global::ServusProtobuf.ConnectFourFunctions) functionID_ : 0; }
      set {
        functionID_ = value;
        functionIDCase_ = FunctionIDOneofCase.Cffunc;
      }
    }

    /// <summary>Field number for the "testGamefunc" field.</summary>
    public const int TestGamefuncFieldNumber = 104;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ServusProtobuf.TestGameFunctions TestGamefunc {
      get { return functionIDCase_ == FunctionIDOneofCase.TestGamefunc ? (global::ServusProtobuf.TestGameFunctions) functionID_ : 0; }
      set {
        functionID_ = value;
        functionIDCase_ = FunctionIDOneofCase.TestGamefunc;
      }
    }

    /// <summary>Field number for the "callBackID" field.</summary>
    public const int CallBackIDFieldNumber = 3;
    private long callBackID_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long CallBackID {
      get { return callBackID_; }
      set {
        callBackID_ = value;
      }
    }

    /// <summary>Field number for the "gameID" field.</summary>
    public const int GameIDFieldNumber = 4;
    private string gameID_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GameID {
      get { return gameID_; }
      set {
        gameID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "error" field.</summary>
    public const int ErrorFieldNumber = 5;
    private bool error_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Error {
      get { return error_; }
      set {
        error_ = value;
      }
    }

    /// <summary>Field number for the "errorMessage" field.</summary>
    public const int ErrorMessageFieldNumber = 6;
    private string errorMessage_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ErrorMessage {
      get { return errorMessage_; }
      set {
        errorMessage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "errorType" field.</summary>
    public const int ErrorTypeFieldNumber = 7;
    private global::ServusProtobuf.ErrorType errorType_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ServusProtobuf.ErrorType ErrorType {
      get { return errorType_; }
      set {
        errorType_ = value;
      }
    }

    /// <summary>Field number for the "value_Bytes" field.</summary>
    public const int ValueBytesFieldNumber = 201;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString ValueBytes {
      get { return valueCase_ == ValueOneofCase.ValueBytes ? (pb::ByteString) value_ : pb::ByteString.Empty; }
      set {
        value_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        valueCase_ = ValueOneofCase.ValueBytes;
      }
    }

    /// <summary>Field number for the "value_String" field.</summary>
    public const int ValueStringFieldNumber = 202;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ValueString {
      get { return valueCase_ == ValueOneofCase.ValueString ? (string) value_ : ""; }
      set {
        value_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        valueCase_ = ValueOneofCase.ValueString;
      }
    }

    /// <summary>Field number for the "value_Int" field.</summary>
    public const int ValueIntFieldNumber = 203;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long ValueInt {
      get { return valueCase_ == ValueOneofCase.ValueInt ? (long) value_ : 0L; }
      set {
        value_ = value;
        valueCase_ = ValueOneofCase.ValueInt;
      }
    }

    /// <summary>Field number for the "value_Bool" field.</summary>
    public const int ValueBoolFieldNumber = 204;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool ValueBool {
      get { return valueCase_ == ValueOneofCase.ValueBool ? (bool) value_ : false; }
      set {
        value_ = value;
        valueCase_ = ValueOneofCase.ValueBool;
      }
    }

    /// <summary>Field number for the "value_SelfAuth" field.</summary>
    public const int ValueSelfAuthFieldNumber = 205;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ServusProtobuf.ServusLogin_Self ValueSelfAuth {
      get { return valueCase_ == ValueOneofCase.ValueSelfAuth ? (global::ServusProtobuf.ServusLogin_Self) value_ : null; }
      set {
        value_ = value;
        valueCase_ = value == null ? ValueOneofCase.None : ValueOneofCase.ValueSelfAuth;
      }
    }

    /// <summary>Field number for the "value_OnlyAuth" field.</summary>
    public const int ValueOnlyAuthFieldNumber = 206;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ServusProtobuf.ServusLogin_Only ValueOnlyAuth {
      get { return valueCase_ == ValueOneofCase.ValueOnlyAuth ? (global::ServusProtobuf.ServusLogin_Only) value_ : null; }
      set {
        value_ = value;
        valueCase_ = value == null ? ValueOneofCase.None : ValueOneofCase.ValueOnlyAuth;
      }
    }

    /// <summary>Field number for the "value_FBAuth" field.</summary>
    public const int ValueFBAuthFieldNumber = 207;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ServusProtobuf.ServusLogin_FB ValueFBAuth {
      get { return valueCase_ == ValueOneofCase.ValueFBAuth ? (global::ServusProtobuf.ServusLogin_FB) value_ : null; }
      set {
        value_ = value;
        valueCase_ = value == null ? ValueOneofCase.None : ValueOneofCase.ValueFBAuth;
      }
    }

    /// <summary>Field number for the "value_FBAuthResp" field.</summary>
    public const int ValueFBAuthRespFieldNumber = 208;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ServusProtobuf.ServusLogin_FB_Response ValueFBAuthResp {
      get { return valueCase_ == ValueOneofCase.ValueFBAuthResp ? (global::ServusProtobuf.ServusLogin_FB_Response) value_ : null; }
      set {
        value_ = value;
        valueCase_ = value == null ? ValueOneofCase.None : ValueOneofCase.ValueFBAuthResp;
      }
    }

    /// <summary>Field number for the "value_UDataPicture" field.</summary>
    public const int ValueUDataPictureFieldNumber = 209;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ServusProtobuf.Userdata_GetPicture ValueUDataPicture {
      get { return valueCase_ == ValueOneofCase.ValueUDataPicture ? (global::ServusProtobuf.Userdata_GetPicture) value_ : null; }
      set {
        value_ = value;
        valueCase_ = value == null ? ValueOneofCase.None : ValueOneofCase.ValueUDataPicture;
      }
    }

    private object functionID_;
    /// <summary>Enum of possible cases for the "functionID" oneof.</summary>
    public enum FunctionIDOneofCase {
      None = 0,
      Basicfunc = 100,
      Authfunc = 101,
      Queuefunc = 102,
      Cffunc = 103,
      TestGamefunc = 104,
    }
    private FunctionIDOneofCase functionIDCase_ = FunctionIDOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FunctionIDOneofCase FunctionIDCase {
      get { return functionIDCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearFunctionID() {
      functionIDCase_ = FunctionIDOneofCase.None;
      functionID_ = null;
    }

    private object value_;
    /// <summary>Enum of possible cases for the "value" oneof.</summary>
    public enum ValueOneofCase {
      None = 0,
      ValueBytes = 201,
      ValueString = 202,
      ValueInt = 203,
      ValueBool = 204,
      ValueSelfAuth = 205,
      ValueOnlyAuth = 206,
      ValueFBAuth = 207,
      ValueFBAuthResp = 208,
      ValueUDataPicture = 209,
    }
    private ValueOneofCase valueCase_ = ValueOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ValueOneofCase ValueCase {
      get { return valueCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearValue() {
      valueCase_ = ValueOneofCase.None;
      value_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ServusMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ServusMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Modul != other.Modul) return false;
      if (Basicfunc != other.Basicfunc) return false;
      if (Authfunc != other.Authfunc) return false;
      if (Queuefunc != other.Queuefunc) return false;
      if (Cffunc != other.Cffunc) return false;
      if (TestGamefunc != other.TestGamefunc) return false;
      if (CallBackID != other.CallBackID) return false;
      if (GameID != other.GameID) return false;
      if (Error != other.Error) return false;
      if (ErrorMessage != other.ErrorMessage) return false;
      if (ErrorType != other.ErrorType) return false;
      if (ValueBytes != other.ValueBytes) return false;
      if (ValueString != other.ValueString) return false;
      if (ValueInt != other.ValueInt) return false;
      if (ValueBool != other.ValueBool) return false;
      if (!object.Equals(ValueSelfAuth, other.ValueSelfAuth)) return false;
      if (!object.Equals(ValueOnlyAuth, other.ValueOnlyAuth)) return false;
      if (!object.Equals(ValueFBAuth, other.ValueFBAuth)) return false;
      if (!object.Equals(ValueFBAuthResp, other.ValueFBAuthResp)) return false;
      if (!object.Equals(ValueUDataPicture, other.ValueUDataPicture)) return false;
      if (FunctionIDCase != other.FunctionIDCase) return false;
      if (ValueCase != other.ValueCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Modul != 0) hash ^= Modul.GetHashCode();
      if (functionIDCase_ == FunctionIDOneofCase.Basicfunc) hash ^= Basicfunc.GetHashCode();
      if (functionIDCase_ == FunctionIDOneofCase.Authfunc) hash ^= Authfunc.GetHashCode();
      if (functionIDCase_ == FunctionIDOneofCase.Queuefunc) hash ^= Queuefunc.GetHashCode();
      if (functionIDCase_ == FunctionIDOneofCase.Cffunc) hash ^= Cffunc.GetHashCode();
      if (functionIDCase_ == FunctionIDOneofCase.TestGamefunc) hash ^= TestGamefunc.GetHashCode();
      if (CallBackID != 0L) hash ^= CallBackID.GetHashCode();
      if (GameID.Length != 0) hash ^= GameID.GetHashCode();
      if (Error != false) hash ^= Error.GetHashCode();
      if (ErrorMessage.Length != 0) hash ^= ErrorMessage.GetHashCode();
      if (ErrorType != 0) hash ^= ErrorType.GetHashCode();
      if (valueCase_ == ValueOneofCase.ValueBytes) hash ^= ValueBytes.GetHashCode();
      if (valueCase_ == ValueOneofCase.ValueString) hash ^= ValueString.GetHashCode();
      if (valueCase_ == ValueOneofCase.ValueInt) hash ^= ValueInt.GetHashCode();
      if (valueCase_ == ValueOneofCase.ValueBool) hash ^= ValueBool.GetHashCode();
      if (valueCase_ == ValueOneofCase.ValueSelfAuth) hash ^= ValueSelfAuth.GetHashCode();
      if (valueCase_ == ValueOneofCase.ValueOnlyAuth) hash ^= ValueOnlyAuth.GetHashCode();
      if (valueCase_ == ValueOneofCase.ValueFBAuth) hash ^= ValueFBAuth.GetHashCode();
      if (valueCase_ == ValueOneofCase.ValueFBAuthResp) hash ^= ValueFBAuthResp.GetHashCode();
      if (valueCase_ == ValueOneofCase.ValueUDataPicture) hash ^= ValueUDataPicture.GetHashCode();
      hash ^= (int) functionIDCase_;
      hash ^= (int) valueCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Modul != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Modul);
      }
      if (CallBackID != 0L) {
        output.WriteRawTag(24);
        output.WriteSInt64(CallBackID);
      }
      if (GameID.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(GameID);
      }
      if (Error != false) {
        output.WriteRawTag(40);
        output.WriteBool(Error);
      }
      if (ErrorMessage.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(ErrorMessage);
      }
      if (ErrorType != 0) {
        output.WriteRawTag(56);
        output.WriteEnum((int) ErrorType);
      }
      if (functionIDCase_ == FunctionIDOneofCase.Basicfunc) {
        output.WriteRawTag(160, 6);
        output.WriteEnum((int) Basicfunc);
      }
      if (functionIDCase_ == FunctionIDOneofCase.Authfunc) {
        output.WriteRawTag(168, 6);
        output.WriteEnum((int) Authfunc);
      }
      if (functionIDCase_ == FunctionIDOneofCase.Queuefunc) {
        output.WriteRawTag(176, 6);
        output.WriteEnum((int) Queuefunc);
      }
      if (functionIDCase_ == FunctionIDOneofCase.Cffunc) {
        output.WriteRawTag(184, 6);
        output.WriteEnum((int) Cffunc);
      }
      if (functionIDCase_ == FunctionIDOneofCase.TestGamefunc) {
        output.WriteRawTag(192, 6);
        output.WriteEnum((int) TestGamefunc);
      }
      if (valueCase_ == ValueOneofCase.ValueBytes) {
        output.WriteRawTag(202, 12);
        output.WriteBytes(ValueBytes);
      }
      if (valueCase_ == ValueOneofCase.ValueString) {
        output.WriteRawTag(210, 12);
        output.WriteString(ValueString);
      }
      if (valueCase_ == ValueOneofCase.ValueInt) {
        output.WriteRawTag(216, 12);
        output.WriteInt64(ValueInt);
      }
      if (valueCase_ == ValueOneofCase.ValueBool) {
        output.WriteRawTag(224, 12);
        output.WriteBool(ValueBool);
      }
      if (valueCase_ == ValueOneofCase.ValueSelfAuth) {
        output.WriteRawTag(234, 12);
        output.WriteMessage(ValueSelfAuth);
      }
      if (valueCase_ == ValueOneofCase.ValueOnlyAuth) {
        output.WriteRawTag(242, 12);
        output.WriteMessage(ValueOnlyAuth);
      }
      if (valueCase_ == ValueOneofCase.ValueFBAuth) {
        output.WriteRawTag(250, 12);
        output.WriteMessage(ValueFBAuth);
      }
      if (valueCase_ == ValueOneofCase.ValueFBAuthResp) {
        output.WriteRawTag(130, 13);
        output.WriteMessage(ValueFBAuthResp);
      }
      if (valueCase_ == ValueOneofCase.ValueUDataPicture) {
        output.WriteRawTag(138, 13);
        output.WriteMessage(ValueUDataPicture);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Modul != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Modul);
      }
      if (functionIDCase_ == FunctionIDOneofCase.Basicfunc) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) Basicfunc);
      }
      if (functionIDCase_ == FunctionIDOneofCase.Authfunc) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) Authfunc);
      }
      if (functionIDCase_ == FunctionIDOneofCase.Queuefunc) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) Queuefunc);
      }
      if (functionIDCase_ == FunctionIDOneofCase.Cffunc) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) Cffunc);
      }
      if (functionIDCase_ == FunctionIDOneofCase.TestGamefunc) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) TestGamefunc);
      }
      if (CallBackID != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeSInt64Size(CallBackID);
      }
      if (GameID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GameID);
      }
      if (Error != false) {
        size += 1 + 1;
      }
      if (ErrorMessage.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ErrorMessage);
      }
      if (ErrorType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ErrorType);
      }
      if (valueCase_ == ValueOneofCase.ValueBytes) {
        size += 2 + pb::CodedOutputStream.ComputeBytesSize(ValueBytes);
      }
      if (valueCase_ == ValueOneofCase.ValueString) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ValueString);
      }
      if (valueCase_ == ValueOneofCase.ValueInt) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(ValueInt);
      }
      if (valueCase_ == ValueOneofCase.ValueBool) {
        size += 2 + 1;
      }
      if (valueCase_ == ValueOneofCase.ValueSelfAuth) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(ValueSelfAuth);
      }
      if (valueCase_ == ValueOneofCase.ValueOnlyAuth) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(ValueOnlyAuth);
      }
      if (valueCase_ == ValueOneofCase.ValueFBAuth) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(ValueFBAuth);
      }
      if (valueCase_ == ValueOneofCase.ValueFBAuthResp) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(ValueFBAuthResp);
      }
      if (valueCase_ == ValueOneofCase.ValueUDataPicture) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(ValueUDataPicture);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ServusMessage other) {
      if (other == null) {
        return;
      }
      if (other.Modul != 0) {
        Modul = other.Modul;
      }
      if (other.CallBackID != 0L) {
        CallBackID = other.CallBackID;
      }
      if (other.GameID.Length != 0) {
        GameID = other.GameID;
      }
      if (other.Error != false) {
        Error = other.Error;
      }
      if (other.ErrorMessage.Length != 0) {
        ErrorMessage = other.ErrorMessage;
      }
      if (other.ErrorType != 0) {
        ErrorType = other.ErrorType;
      }
      switch (other.FunctionIDCase) {
        case FunctionIDOneofCase.Basicfunc:
          Basicfunc = other.Basicfunc;
          break;
        case FunctionIDOneofCase.Authfunc:
          Authfunc = other.Authfunc;
          break;
        case FunctionIDOneofCase.Queuefunc:
          Queuefunc = other.Queuefunc;
          break;
        case FunctionIDOneofCase.Cffunc:
          Cffunc = other.Cffunc;
          break;
        case FunctionIDOneofCase.TestGamefunc:
          TestGamefunc = other.TestGamefunc;
          break;
      }

      switch (other.ValueCase) {
        case ValueOneofCase.ValueBytes:
          ValueBytes = other.ValueBytes;
          break;
        case ValueOneofCase.ValueString:
          ValueString = other.ValueString;
          break;
        case ValueOneofCase.ValueInt:
          ValueInt = other.ValueInt;
          break;
        case ValueOneofCase.ValueBool:
          ValueBool = other.ValueBool;
          break;
        case ValueOneofCase.ValueSelfAuth:
          if (ValueSelfAuth == null) {
            ValueSelfAuth = new global::ServusProtobuf.ServusLogin_Self();
          }
          ValueSelfAuth.MergeFrom(other.ValueSelfAuth);
          break;
        case ValueOneofCase.ValueOnlyAuth:
          if (ValueOnlyAuth == null) {
            ValueOnlyAuth = new global::ServusProtobuf.ServusLogin_Only();
          }
          ValueOnlyAuth.MergeFrom(other.ValueOnlyAuth);
          break;
        case ValueOneofCase.ValueFBAuth:
          if (ValueFBAuth == null) {
            ValueFBAuth = new global::ServusProtobuf.ServusLogin_FB();
          }
          ValueFBAuth.MergeFrom(other.ValueFBAuth);
          break;
        case ValueOneofCase.ValueFBAuthResp:
          if (ValueFBAuthResp == null) {
            ValueFBAuthResp = new global::ServusProtobuf.ServusLogin_FB_Response();
          }
          ValueFBAuthResp.MergeFrom(other.ValueFBAuthResp);
          break;
        case ValueOneofCase.ValueUDataPicture:
          if (ValueUDataPicture == null) {
            ValueUDataPicture = new global::ServusProtobuf.Userdata_GetPicture();
          }
          ValueUDataPicture.MergeFrom(other.ValueUDataPicture);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            modul_ = (global::ServusProtobuf.Modulename) input.ReadEnum();
            break;
          }
          case 24: {
            CallBackID = input.ReadSInt64();
            break;
          }
          case 34: {
            GameID = input.ReadString();
            break;
          }
          case 40: {
            Error = input.ReadBool();
            break;
          }
          case 50: {
            ErrorMessage = input.ReadString();
            break;
          }
          case 56: {
            errorType_ = (global::ServusProtobuf.ErrorType) input.ReadEnum();
            break;
          }
          case 800: {
            functionID_ = input.ReadEnum();
            functionIDCase_ = FunctionIDOneofCase.Basicfunc;
            break;
          }
          case 808: {
            functionID_ = input.ReadEnum();
            functionIDCase_ = FunctionIDOneofCase.Authfunc;
            break;
          }
          case 816: {
            functionID_ = input.ReadEnum();
            functionIDCase_ = FunctionIDOneofCase.Queuefunc;
            break;
          }
          case 824: {
            functionID_ = input.ReadEnum();
            functionIDCase_ = FunctionIDOneofCase.Cffunc;
            break;
          }
          case 832: {
            functionID_ = input.ReadEnum();
            functionIDCase_ = FunctionIDOneofCase.TestGamefunc;
            break;
          }
          case 1610: {
            ValueBytes = input.ReadBytes();
            break;
          }
          case 1618: {
            ValueString = input.ReadString();
            break;
          }
          case 1624: {
            ValueInt = input.ReadInt64();
            break;
          }
          case 1632: {
            ValueBool = input.ReadBool();
            break;
          }
          case 1642: {
            global::ServusProtobuf.ServusLogin_Self subBuilder = new global::ServusProtobuf.ServusLogin_Self();
            if (valueCase_ == ValueOneofCase.ValueSelfAuth) {
              subBuilder.MergeFrom(ValueSelfAuth);
            }
            input.ReadMessage(subBuilder);
            ValueSelfAuth = subBuilder;
            break;
          }
          case 1650: {
            global::ServusProtobuf.ServusLogin_Only subBuilder = new global::ServusProtobuf.ServusLogin_Only();
            if (valueCase_ == ValueOneofCase.ValueOnlyAuth) {
              subBuilder.MergeFrom(ValueOnlyAuth);
            }
            input.ReadMessage(subBuilder);
            ValueOnlyAuth = subBuilder;
            break;
          }
          case 1658: {
            global::ServusProtobuf.ServusLogin_FB subBuilder = new global::ServusProtobuf.ServusLogin_FB();
            if (valueCase_ == ValueOneofCase.ValueFBAuth) {
              subBuilder.MergeFrom(ValueFBAuth);
            }
            input.ReadMessage(subBuilder);
            ValueFBAuth = subBuilder;
            break;
          }
          case 1666: {
            global::ServusProtobuf.ServusLogin_FB_Response subBuilder = new global::ServusProtobuf.ServusLogin_FB_Response();
            if (valueCase_ == ValueOneofCase.ValueFBAuthResp) {
              subBuilder.MergeFrom(ValueFBAuthResp);
            }
            input.ReadMessage(subBuilder);
            ValueFBAuthResp = subBuilder;
            break;
          }
          case 1674: {
            global::ServusProtobuf.Userdata_GetPicture subBuilder = new global::ServusProtobuf.Userdata_GetPicture();
            if (valueCase_ == ValueOneofCase.ValueUDataPicture) {
              subBuilder.MergeFrom(ValueUDataPicture);
            }
            input.ReadMessage(subBuilder);
            ValueUDataPicture = subBuilder;
            break;
          }
        }
      }
    }

  }

  public sealed partial class Userdata_GetPicture : pb::IMessage<Userdata_GetPicture> {
    private static readonly pb::MessageParser<Userdata_GetPicture> _parser = new pb::MessageParser<Userdata_GetPicture>(() => new Userdata_GetPicture());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Userdata_GetPicture> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServusProtobuf.ServusProtobufMainReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Userdata_GetPicture() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Userdata_GetPicture(Userdata_GetPicture other) : this() {
      id_ = other.id_;
      reason_ = other.reason_;
      valueBytes_ = other.valueBytes_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Userdata_GetPicture Clone() {
      return new Userdata_GetPicture(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "reason" field.</summary>
    public const int ReasonFieldNumber = 2;
    private global::ServusProtobuf.USERDATA_REASONS reason_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ServusProtobuf.USERDATA_REASONS Reason {
      get { return reason_; }
      set {
        reason_ = value;
      }
    }

    /// <summary>Field number for the "value_Bytes" field.</summary>
    public const int ValueBytesFieldNumber = 3;
    private pb::ByteString valueBytes_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString ValueBytes {
      get { return valueBytes_; }
      set {
        valueBytes_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Userdata_GetPicture);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Userdata_GetPicture other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Reason != other.Reason) return false;
      if (ValueBytes != other.ValueBytes) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (Reason != 0) hash ^= Reason.GetHashCode();
      if (ValueBytes.Length != 0) hash ^= ValueBytes.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (Reason != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Reason);
      }
      if (ValueBytes.Length != 0) {
        output.WriteRawTag(26);
        output.WriteBytes(ValueBytes);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (Reason != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Reason);
      }
      if (ValueBytes.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(ValueBytes);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Userdata_GetPicture other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.Reason != 0) {
        Reason = other.Reason;
      }
      if (other.ValueBytes.Length != 0) {
        ValueBytes = other.ValueBytes;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 16: {
            reason_ = (global::ServusProtobuf.USERDATA_REASONS) input.ReadEnum();
            break;
          }
          case 26: {
            ValueBytes = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ServusLogin_Self : pb::IMessage<ServusLogin_Self> {
    private static readonly pb::MessageParser<ServusLogin_Self> _parser = new pb::MessageParser<ServusLogin_Self>(() => new ServusLogin_Self());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ServusLogin_Self> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServusProtobuf.ServusProtobufMainReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServusLogin_Self() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServusLogin_Self(ServusLogin_Self other) : this() {
      nickname_ = other.nickname_;
      email_ = other.email_;
      password_ = other.password_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServusLogin_Self Clone() {
      return new ServusLogin_Self(this);
    }

    /// <summary>Field number for the "nickname" field.</summary>
    public const int NicknameFieldNumber = 1;
    private string nickname_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Nickname {
      get { return nickname_; }
      set {
        nickname_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "email" field.</summary>
    public const int EmailFieldNumber = 2;
    private string email_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Email {
      get { return email_; }
      set {
        email_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "password" field.</summary>
    public const int PasswordFieldNumber = 3;
    private string password_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Password {
      get { return password_; }
      set {
        password_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ServusLogin_Self);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ServusLogin_Self other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Nickname != other.Nickname) return false;
      if (Email != other.Email) return false;
      if (Password != other.Password) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Nickname.Length != 0) hash ^= Nickname.GetHashCode();
      if (Email.Length != 0) hash ^= Email.GetHashCode();
      if (Password.Length != 0) hash ^= Password.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Nickname.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Nickname);
      }
      if (Email.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Email);
      }
      if (Password.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Password);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Nickname.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Nickname);
      }
      if (Email.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Email);
      }
      if (Password.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Password);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ServusLogin_Self other) {
      if (other == null) {
        return;
      }
      if (other.Nickname.Length != 0) {
        Nickname = other.Nickname;
      }
      if (other.Email.Length != 0) {
        Email = other.Email;
      }
      if (other.Password.Length != 0) {
        Password = other.Password;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Nickname = input.ReadString();
            break;
          }
          case 18: {
            Email = input.ReadString();
            break;
          }
          case 26: {
            Password = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ServusLogin_FB : pb::IMessage<ServusLogin_FB> {
    private static readonly pb::MessageParser<ServusLogin_FB> _parser = new pb::MessageParser<ServusLogin_FB>(() => new ServusLogin_FB());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ServusLogin_FB> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServusProtobuf.ServusProtobufMainReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServusLogin_FB() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServusLogin_FB(ServusLogin_FB other) : this() {
      fbId_ = other.fbId_;
      token_ = other.token_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServusLogin_FB Clone() {
      return new ServusLogin_FB(this);
    }

    /// <summary>Field number for the "fb_id" field.</summary>
    public const int FbIdFieldNumber = 1;
    private string fbId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FbId {
      get { return fbId_; }
      set {
        fbId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "token" field.</summary>
    public const int TokenFieldNumber = 2;
    private string token_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Token {
      get { return token_; }
      set {
        token_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ServusLogin_FB);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ServusLogin_FB other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FbId != other.FbId) return false;
      if (Token != other.Token) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (FbId.Length != 0) hash ^= FbId.GetHashCode();
      if (Token.Length != 0) hash ^= Token.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (FbId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(FbId);
      }
      if (Token.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Token);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (FbId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FbId);
      }
      if (Token.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Token);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ServusLogin_FB other) {
      if (other == null) {
        return;
      }
      if (other.FbId.Length != 0) {
        FbId = other.FbId;
      }
      if (other.Token.Length != 0) {
        Token = other.Token;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            FbId = input.ReadString();
            break;
          }
          case 18: {
            Token = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ServusLogin_FB_Response : pb::IMessage<ServusLogin_FB_Response> {
    private static readonly pb::MessageParser<ServusLogin_FB_Response> _parser = new pb::MessageParser<ServusLogin_FB_Response>(() => new ServusLogin_FB_Response());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ServusLogin_FB_Response> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServusProtobuf.ServusProtobufMainReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServusLogin_FB_Response() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServusLogin_FB_Response(ServusLogin_FB_Response other) : this() {
      loginSucessful_ = other.loginSucessful_;
      reason_ = other.reason_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServusLogin_FB_Response Clone() {
      return new ServusLogin_FB_Response(this);
    }

    /// <summary>Field number for the "loginSucessful" field.</summary>
    public const int LoginSucessfulFieldNumber = 1;
    private bool loginSucessful_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool LoginSucessful {
      get { return loginSucessful_; }
      set {
        loginSucessful_ = value;
      }
    }

    /// <summary>Field number for the "reason" field.</summary>
    public const int ReasonFieldNumber = 2;
    private global::ServusProtobuf.FB_REASONS reason_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ServusProtobuf.FB_REASONS Reason {
      get { return reason_; }
      set {
        reason_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ServusLogin_FB_Response);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ServusLogin_FB_Response other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (LoginSucessful != other.LoginSucessful) return false;
      if (Reason != other.Reason) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (LoginSucessful != false) hash ^= LoginSucessful.GetHashCode();
      if (Reason != 0) hash ^= Reason.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (LoginSucessful != false) {
        output.WriteRawTag(8);
        output.WriteBool(LoginSucessful);
      }
      if (Reason != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Reason);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (LoginSucessful != false) {
        size += 1 + 1;
      }
      if (Reason != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Reason);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ServusLogin_FB_Response other) {
      if (other == null) {
        return;
      }
      if (other.LoginSucessful != false) {
        LoginSucessful = other.LoginSucessful;
      }
      if (other.Reason != 0) {
        Reason = other.Reason;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            LoginSucessful = input.ReadBool();
            break;
          }
          case 16: {
            reason_ = (global::ServusProtobuf.FB_REASONS) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ServusLogin_Only : pb::IMessage<ServusLogin_Only> {
    private static readonly pb::MessageParser<ServusLogin_Only> _parser = new pb::MessageParser<ServusLogin_Only>(() => new ServusLogin_Only());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ServusLogin_Only> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServusProtobuf.ServusProtobufMainReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServusLogin_Only() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServusLogin_Only(ServusLogin_Only other) : this() {
      id_ = other.id_;
      key_ = other.key_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServusLogin_Only Clone() {
      return new ServusLogin_Only(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private long id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "key" field.</summary>
    public const int KeyFieldNumber = 2;
    private long key_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Key {
      get { return key_; }
      set {
        key_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ServusLogin_Only);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ServusLogin_Only other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Key != other.Key) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0L) hash ^= Id.GetHashCode();
      if (Key != 0L) hash ^= Key.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Id);
      }
      if (Key != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Key);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Id);
      }
      if (Key != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Key);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ServusLogin_Only other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0L) {
        Id = other.Id;
      }
      if (other.Key != 0L) {
        Key = other.Key;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt64();
            break;
          }
          case 16: {
            Key = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
